<?php

namespace Ffbl\Bundle\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements UserProviderInterface
{
	public function loadUserByUsername($username)
	{
		$query = $this->createQueryBuilder('u')
						->select('u, r')
						->leftJoin('u.userRoles', 'r')
						->where('u.username = :username')
						->setParameter('username', $username)
						->getQuery();

		try{
			$user = $query->getSingleResult();
		} catch(NoResultException $e){

			$message = 'Unable to find an active user FfblMainBundle:User object identified by ' . $username;
			throw new UsernameNotFoundException($message, 0, $e);
		}

		return $user;
		
	}

	public function refreshUser(UserInterface $user){
		$class = get_class($user);
		if(!$this->supportsClass($class)){
			throw new UnsupportedUserException("Instances of $class are not supported.");
		}

		return $this->find($user->getId());
	}

	public function supportsClass($class){
		return $this->getEntityName() === $class || is_subclass_of($class, $getEntityName());
	}
}
